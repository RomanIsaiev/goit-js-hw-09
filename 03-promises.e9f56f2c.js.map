{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WA8BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CArCUQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEhC,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAOF,EAAMG,cACnB,IAAIC,EAAYC,OAAOH,EAAKI,SAASjB,MAAMkB,OAC3C,MAAMC,EAAWH,OAAOH,EAAKI,SAASG,KAAKF,OACrCG,EAAaL,OAAOH,EAAKI,SAASK,OAAOJ,OAE/C,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAYE,GAAK,EAAG,CACvC,MAAMC,EAAeT,EAAYI,GAAYI,EAAI,GACjDzB,EAAcyB,EAAGC,GACdC,MAAK,KACJC,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqBL,QAAUC,MAAiB,IAGnDK,OAAM,KACLH,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoBP,QAAUC,MAAiB,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst setOptionsForm = document.querySelector('.form');\nsetOptionsForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const form = event.currentTarget;\n  let userDelay = Number(form.elements.delay.value);\n  const userStep = Number(form.elements.step.value);\n  const userAmount = Number(form.elements.amount.value);\n\n  for (let i = 1; i <= userAmount; i += 1) {\n    const counterDelay = userDelay + userStep * (i - 1);\n    createPromise(i, counterDelay)\n      .then(() => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${counterDelay}ms`\n        );\n      })\n      .catch(() => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${counterDelay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","form","currentTarget","userDelay","Number","elements","value","userStep","step","userAmount","amount","i","counterDelay","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e9f56f2c.js.map"}